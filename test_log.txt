>>>> [1] batman <<<<
>>>> [2] batman_2 <<<<
>>>> [3] blank_1 <<<<
>>>> [4] blank_2 <<<<
>>>> [5] circle_1 <<<<
>>>> [6] circle_2 <<<<
>>>> [7] ellipse_1 <<<<
>>>> [8] ellipse_2 <<<<
>>>> [9] group_1 <<<<
Here 
>>>> [10] group_2 <<<<
Here 
>>>> [11] group_3 <<<<
Here 
>>>> [12] group_4 <<<<
readSVG.cpp:81:33: runtime error: member call on null pointer of type 'struct XMLElement'
readSVG.cpp:81:33: runtime error: member access within null pointer of type 'struct XMLElement'
AddressSanitizer:DEADLYSIGNAL
=================================================================
==6292==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b46cca8cfa bp 0x7fff1d855a50 sp 0x7fff1d8544f0 T0)
==6292==The signal is caused by a READ memory access.
==6292==Hint: address points to the zero page.
    #0 0x55b46cca8cfa in svg::parseGroup(tinyxml2::XMLElement*, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&, char const*) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:81
    #1 0x55b46ccb0c0e in svg::readSVG(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, svg::Point&, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:275
    #2 0x55b46cc943a4 in svg::convert(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/convert.cpp:11
    #3 0x55b46cc35653 in svg::TestDriver::run_conversion_test(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x144653)
    #4 0x55b46cc37787 in svg::TestDriver::run_test(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x146787)
    #5 0x55b46cc38df2 in svg::TestDriver::run_tests(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x147df2)
    #6 0x55b46cc347d5 in main /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test.cpp:181
    #7 0x7f23a9ef0d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)
    #8 0x7f23a9ef0e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)
    #9 0x55b46cc34394 in _start (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x143394)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:81 in svg::parseGroup(tinyxml2::XMLElement*, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&, char const*)
==6292==ABORTING
>>>> [13] group_5 <<<<
readSVG.cpp:81:33: runtime error: member call on null pointer of type 'struct XMLElement'
readSVG.cpp:81:33: runtime error: member access within null pointer of type 'struct XMLElement'
AddressSanitizer:DEADLYSIGNAL
=================================================================
==6293==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b46cca8cfa bp 0x7fff1d855a50 sp 0x7fff1d8544f0 T0)
==6293==The signal is caused by a READ memory access.
==6293==Hint: address points to the zero page.
    #0 0x55b46cca8cfa in svg::parseGroup(tinyxml2::XMLElement*, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&, char const*) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:81
    #1 0x55b46ccb0c0e in svg::readSVG(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, svg::Point&, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:275
    #2 0x55b46cc943a4 in svg::convert(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/convert.cpp:11
    #3 0x55b46cc35653 in svg::TestDriver::run_conversion_test(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x144653)
    #4 0x55b46cc37787 in svg::TestDriver::run_test(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x146787)
    #5 0x55b46cc38df2 in svg::TestDriver::run_tests(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x147df2)
    #6 0x55b46cc347d5 in main /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test.cpp:181
    #7 0x7f23a9ef0d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)
    #8 0x7f23a9ef0e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)
    #9 0x55b46cc34394 in _start (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x143394)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:81 in svg::parseGroup(tinyxml2::XMLElement*, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&, char const*)
==6293==ABORTING
>>>> [14] group_6 <<<<
Here 
pixel (20 220): expected 0 0 255 got 255 255 255
>>>> [15] group_7 <<<<
Here 
>>>> [16] line_1 <<<<
>>>> [17] line_2 <<<<
>>>> [18] lion <<<<
>>>> [19] polygon_1 <<<<
>>>> [20] polygon_2 <<<<
>>>> [21] polyline_1 <<<<
>>>> [22] polyline_2 <<<<
>>>> [23] polyline_3 <<<<
>>>> [24] rect_1 <<<<
>>>> [25] rect_2 <<<<
>>>> [26] rect_3 <<<<
>>>> [27] rotate_circle <<<<
>>>> [28] rotate_circle_with_origin <<<<
>>>> [29] rotate_line <<<<
>>>> [30] rotate_line_with_origin <<<<
>>>> [31] rotate_polygon <<<<
>>>> [32] rotate_polygon_with_origin <<<<
>>>> [33] rotate_polyline <<<<
>>>> [34] rotate_polyline_with_origin <<<<
>>>> [35] rotate_rect <<<<
>>>> [36] rotate_rect_with_origin <<<<
>>>> [37] scale_circle <<<<
>>>> [38] scale_circle_with_origin <<<<
>>>> [39] scale_ellipse <<<<
>>>> [40] scale_ellipse_with_origin <<<<
>>>> [41] scale_line <<<<
>>>> [42] scale_line_with_origin <<<<
>>>> [43] scale_polygon <<<<
>>>> [44] scale_polygon_with_origin <<<<
>>>> [45] scale_polyline <<<<
>>>> [46] scale_polyline_with_origin <<<<
>>>> [47] scale_rect <<<<
>>>> [48] scale_rect_with_origin <<<<
>>>> [49] transform_several <<<<
>>>> [50] translate_circle <<<<
>>>> [51] translate_ellipse <<<<
>>>> [52] translate_line <<<<
>>>> [53] translate_polygon <<<<
>>>> [54] translate_polyline <<<<
>>>> [55] translate_rect <<<<
>>>> [56] use_1 <<<<
test: PNGImage.cpp:62: svg::Color& svg::PNGImage::at(int, int): Assertion `x >= 0 && x < width_' failed.
>>>> [57] use_2 <<<<
test: PNGImage.cpp:63: svg::Color& svg::PNGImage::at(int, int): Assertion `y >= 0 && y < height_' failed.
>>>> [58] use_3 <<<<
Here 
pixel (0 750): expected 255 0 0 got 255 255 255
>>>> [59] use_4 <<<<
Here 
pixel (0 500): expected 255 0 0 got 255 255 255
>>>> [60] use_5 <<<<
Here 
pixel (302 51): expected 255 0 0 got 255 255 255
>>>> [61] use_6 <<<<
readSVG.cpp:81:33: runtime error: member call on null pointer of type 'struct XMLElement'
readSVG.cpp:81:33: runtime error: member access within null pointer of type 'struct XMLElement'
AddressSanitizer:DEADLYSIGNAL
=================================================================
==6386==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b46cca8cfa bp 0x7fff1d8544e0 sp 0x7fff1d852f80 T0)
==6386==The signal is caused by a READ memory access.
==6386==Hint: address points to the zero page.
    #0 0x55b46cca8cfa in svg::parseGroup(tinyxml2::XMLElement*, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&, char const*) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:81
    #1 0x55b46cca8c81 in svg::parseGroup(tinyxml2::XMLElement*, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&, char const*) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:77
    #2 0x55b46ccb0c0e in svg::readSVG(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, svg::Point&, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:275
    #3 0x55b46cc943a4 in svg::convert(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/convert.cpp:11
    #4 0x55b46cc35653 in svg::TestDriver::run_conversion_test(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x144653)
    #5 0x55b46cc37787 in svg::TestDriver::run_test(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x146787)
    #6 0x55b46cc38df2 in svg::TestDriver::run_tests(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x147df2)
    #7 0x55b46cc347d5 in main /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test.cpp:181
    #8 0x7f23a9ef0d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)
    #9 0x7f23a9ef0e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)
    #10 0x55b46cc34394 in _start (/mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/test+0x143394)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /mnt/c/Users/anton/Desktop/FEUP/PROG/prog24/readSVG.cpp:81 in svg::parseGroup(tinyxml2::XMLElement*, std::vector<svg::SVGElement*, std::allocator<svg::SVGElement*> >&, char const*)
==6386==ABORTING
